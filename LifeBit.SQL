
-- 1. ENUM 타입 (역할)
CREATE TYPE user_role AS ENUM ('ADMIN', 'USER');

-- 2. users
DROP TABLE IF EXISTS users CASCADE;
CREATE TABLE users (
    user_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255),
    nickname VARCHAR(100) UNIQUE NOT NULL,
    height DECIMAL(5,2),
    weight DECIMAL(5,2),
    age INTEGER,
    gender VARCHAR(10) CHECK (gender IN ('male', 'female')),
    role user_role DEFAULT 'USER',
    created_at TIMESTAMP DEFAULT NOW(), 
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 3. social_accounts
DROP TABLE IF EXISTS social_accounts CASCADE;
CREATE TABLE social_accounts (
    social_account_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    user_id BIGINT REFERENCES users(user_id) ON DELETE CASCADE,
    provider VARCHAR(50) NOT NULL,
    provider_user_id VARCHAR(255) NOT NULL,
    UNIQUE (provider, provider_user_id),
    created_at TIMESTAMP DEFAULT NOW()
);

-- 4. user_goals
DROP TABLE IF EXISTS user_goals CASCADE;
CREATE TABLE user_goals (
    user_goal_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    user_id BIGINT REFERENCES users(user_id) ON DELETE CASCADE,
    weekly_workout_target INTEGER DEFAULT 3,
    daily_carbs_target INTEGER DEFAULT 200,
    daily_protein_target INTEGER DEFAULT 120,
    daily_fat_target INTEGER DEFAULT 60,
    created_at TIMESTAMP DEFAULT NOW(), 
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 5. health_records
DROP TABLE IF EXISTS health_records CASCADE;
CREATE TABLE health_records (
    health_record_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    user_id BIGINT REFERENCES users(user_id) ON DELETE CASCADE,
    weight DECIMAL(5,2),
    bmi DECIMAL(4,2),
    record_date DATE NOT NULL,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 6. exercise_catalog
DROP TABLE IF EXISTS exercise_catalog CASCADE;
CREATE TABLE exercise_catalog (
    exercise_catalog_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    name VARCHAR(100) NOT NULL,
    body_part VARCHAR(50) CHECK (body_part IN ('가슴', '등', '하체', '어깨', '복근', '팔', '유산소')),
    description TEXT,
    intensity VARCHAR(50),
    created_at TIMESTAMP DEFAULT NOW()
);

-- 7. exercise_sessions
DROP TABLE IF EXISTS exercise_sessions CASCADE;
CREATE TABLE exercise_sessions (
    exercise_session_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    user_id BIGINT REFERENCES users(user_id) ON DELETE CASCADE,
    exercise_catalog_id BIGINT REFERENCES exercise_catalog(exercise_catalog_id) ON DELETE SET NULL,
    duration_minutes INTEGER,
    calories_burned INTEGER,
    notes TEXT,
    exercise_date DATE NOT NULL,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 8. food_items
DROP TABLE IF EXISTS food_items CASCADE;
CREATE TABLE food_items (
    food_item_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    food_code VARCHAR(50) UNIQUE,
    name VARCHAR(255) NOT NULL,
    serving_size DECIMAL(6,2),
    calories DECIMAL(6,2),
    carbs DECIMAL(6,2),
    protein DECIMAL(6,2),
    fat DECIMAL(6,2),
    created_at TIMESTAMP DEFAULT NOW()
);

-- 9. meal_logs
DROP TABLE IF EXISTS meal_logs CASCADE;
CREATE TABLE meal_logs (
    meal_log_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    user_id BIGINT REFERENCES users(user_id) ON DELETE CASCADE,
    food_item_id BIGINT REFERENCES food_items(food_item_id) ON DELETE CASCADE,
    quantity DECIMAL(6,2),
    log_date DATE NOT NULL,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 10. user_rankings
DROP TABLE IF EXISTS user_rankings CASCADE;
CREATE TABLE user_rankings (
    user_ranking_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    user_id BIGINT UNIQUE REFERENCES users(user_id) ON DELETE CASCADE,
    total_score INTEGER DEFAULT 0,
    streak_days INTEGER DEFAULT 0,
    rank_position INTEGER,
    last_updated TIMESTAMP DEFAULT NOW()
);

-- 11. achievements
DROP TABLE IF EXISTS achievements CASCADE;
CREATE TABLE achievements (
    achievement_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    title VARCHAR(200) NOT NULL,
    description TEXT,
    badge_type VARCHAR(20) CHECK (badge_type IN ('bronze', 'silver', 'gold', 'platinum')),
    target_days INTEGER,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 12. user_achievements
DROP TABLE IF EXISTS user_achievements CASCADE;
CREATE TABLE user_achievements (
    user_achievement_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    user_id BIGINT REFERENCES users(user_id) ON DELETE CASCADE,
    achievement_id BIGINT REFERENCES achievements(achievement_id) ON DELETE CASCADE,
    is_achieved BOOLEAN DEFAULT FALSE,
    progress INTEGER DEFAULT 0,
    achieved_date DATE,
    created_at TIMESTAMP DEFAULT NOW(), 
    UNIQUE(user_id, achievement_id)
);

-- 13. recommendation
DROP TABLE IF EXISTS recommendation CASCADE;
CREATE TABLE recommendation (
    recommendation_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    user_id BIGINT REFERENCES users(user_id) ON DELETE CASCADE,
    item_id BIGINT,
    recommendation_data JSONB,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 14. feedback
DROP TABLE IF EXISTS feedback CASCADE;
CREATE TABLE feedback (
    feedback_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    recommendation_id BIGINT REFERENCES recommendation(recommendation_id) ON DELETE CASCADE,
    user_id BIGINT REFERENCES users(user_id) ON DELETE CASCADE,
    feedback_type VARCHAR(100),
    feedback_data JSONB,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 15. policy
DROP TABLE IF EXISTS policy CASCADE;
CREATE TABLE policy (
    policy_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    policy_name VARCHAR(255) NOT NULL,
    policy_data JSONB,
    created_at TIMESTAMP DEFAULT NOW(), 
    updated_at TIMESTAMP DEFAULT NOW()
);

-- 16. log
DROP TABLE IF EXISTS log CASCADE;
CREATE TABLE log (
    log_id BIGSERIAL PRIMARY KEY,
    uuid UUID UNIQUE NOT NULL DEFAULT gen_random_uuid(), 
    event_type VARCHAR(100),
    event_data JSONB,
    created_at TIMESTAMP DEFAULT NOW()
);


WITH base_vals AS (
    SELECT 
        generate_series(1,50) AS idx
),
generated_users AS (
    SELECT
        idx AS user_id,
        concat('user', idx, '@example.com') AS email,
        '$2a$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/Lewis.2bEcUx2zJP6' AS password_hash,
        concat('User', idx) AS nickname,
        (160 + (idx % 21))::numeric(5, 2) AS height,
        (55 + (idx % 26))::numeric(5, 2) AS weight,
        (20 + (idx % 21)) AS age,
        CASE WHEN idx % 2 = 0 THEN 'male' ELSE 'female' END AS gender,
        CASE WHEN idx % 47 = 0 THEN 'ADMIN'::user_role ELSE 'USER'::user_role END AS role,
        (NOW() - (idx * interval '5 days'))::timestamp AS created_at
    FROM base_vals
)
 INSERT INTO users (user_id, email, password_hash, nickname, height, weight, age, gender, role, created_at, updated_at)
 SELECT 
    user_id, email, password_hash, nickname, height, weight, age, gender, role, created_at, created_at
 FROM generated_users;


INSERT INTO social_accounts (social_account_id, user_id, provider, provider_user_id, created_at) VALUES
(1, 1, 'google', 'google_user_1', NOW()),
(2, 2, 'google', 'google_user_2', NOW()),
(3, 3, 'kakao', 'kakao_user_3', NOW()),
(4, 4, 'google', 'google_user_4', NOW()),
(5, 5, 'google', 'google_user_5', NOW()),
(6, 6, 'kakao', 'kakao_user_6', NOW()),
(7, 7, 'google', 'google_user_7', NOW()),
(8, 8, 'google', 'google_user_8', NOW()),
(9, 9, 'kakao', 'kakao_user_9', NOW()),
(10, 10, 'google', 'google_user_10', NOW()),
(11, 11, 'google', 'google_user_11', NOW()),
(12, 12, 'kakao', 'kakao_user_12', NOW()),
(13, 13, 'google', 'google_user_13', NOW()),
(14, 14, 'google', 'google_user_14', NOW()),
(15, 15, 'kakao', 'kakao_user_15', NOW()),
(16, 16, 'google', 'google_user_16', NOW()),
(17, 17, 'google', 'google_user_17', NOW()),
(18, 18, 'kakao', 'kakao_user_18', NOW()),
(19, 19, 'google', 'google_user_19', NOW()),
(20, 20, 'google', 'google_user_20', NOW()),
(21, 21, 'kakao', 'kakao_user_21', NOW()),
(22, 22, 'google', 'google_user_22', NOW()),
(23, 23, 'google', 'google_user_23', NOW()),
(24, 24, 'kakao', 'kakao_user_24', NOW()),
(25, 25, 'google', 'google_user_25', NOW()),
(26, 26, 'google', 'google_user_26', NOW()),
(27, 27, 'kakao', 'kakao_user_27', NOW()),
(28, 28, 'google', 'google_user_28', NOW()),
(29, 29, 'google', 'google_user_29', NOW()),
(30, 30, 'kakao', 'kakao_user_30', NOW()),
(31, 31, 'google', 'google_user_31', NOW()),
(32, 32, 'google', 'google_user_32', NOW()),
(33, 33, 'kakao', 'kakao_user_33', NOW()),
(34, 34, 'google', 'google_user_34', NOW()),
(35, 35, 'google', 'google_user_35', NOW()),
(36, 36, 'kakao', 'kakao_user_36', NOW()),
(37, 37, 'google', 'google_user_37', NOW()),
(38, 38, 'google', 'google_user_38', NOW()),
(39, 39, 'kakao', 'kakao_user_39', NOW()),
(40, 40, 'google', 'google_user_40', NOW()),
(41, 41, 'google', 'google_user_41', NOW()),
(42, 42, 'kakao', 'kakao_user_42', NOW()),
(43, 43, 'google', 'google_user_43', NOW()),
(44, 44, 'google', 'google_user_44', NOW()),
(45, 45, 'kakao', 'kakao_user_45', NOW()),
(46, 46, 'google', 'google_user_46', NOW()),
(47, 47, 'google', 'google_user_47', NOW()),
(48, 48, 'kakao', 'kakao_user_48', NOW()),
(49, 49, 'google', 'google_user_49', NOW()),
(50, 50, 'google', 'google_user_50', NOW());



INSERT INTO user_goals (user_goal_id, user_id, weekly_workout_target, daily_carbs_target, daily_protein_target, daily_fat_target, created_at, updated_at) VALUES
(1, 1, 3, 200, 120, 60, NOW(), NOW()),
(2, 2, 4, 220, 130, 65, NOW(), NOW()),
(3, 3, 3, 250, 140, 70, NOW(), NOW()),
(4, 4, 5, 200, 100, 50, NOW(), NOW()),
(5, 5, 3, 220, 125, 60, NOW(), NOW()),
(6, 6, 4, 250, 140, 65, NOW(), NOW()),
(7, 7, 3, 200, 120, 60, NOW(), NOW()),
(8, 8, 5, 220, 135, 65, NOW(), NOW()),
(9, 9, 4, 250, 145, 70, NOW(), NOW()),
(10, 10, 3, 200, 120, 60, NOW(), NOW()),
(11, 11, 4, 220, 133, 65, NOW(), NOW()),
(12, 12, 5, 250, 145, 70, NOW(), NOW()),
(13, 13, 3, 200, 116, 60, NOW(), NOW()),
(14, 14, 4, 220, 128, 65, NOW(), NOW()),
(15, 15, 5, 250, 145, 70, NOW(), NOW()),
(16, 16, 3, 200, 119, 60, NOW(), NOW()),
(17, 17, 4, 220, 133, 65, NOW(), NOW()),
(18, 18, 5, 250, 145, 70, NOW(), NOW()),
(19, 19, 3, 200, 116, 60, NOW(), NOW()),
(20, 20, 4, 220, 129, 65, NOW(), NOW()),
(21, 21, 5, 250, 145, 70, NOW(), NOW()),
(22, 22, 3, 200, 116, 60, NOW(), NOW()),
(23, 23, 4, 220, 133, 65, NOW(), NOW()),
(24, 24, 5, 250, 145, 70, NOW(), NOW()),
(25, 25, 3, 200, 116, 60, NOW(), NOW()),
(26, 26, 4, 220, 133, 65, NOW(), NOW()),
(27, 27, 5, 250, 145, 70, NOW(), NOW()),
(28, 28, 3, 200, 116, 60, NOW(), NOW()),
(29, 29, 4, 220, 133, 65, NOW(), NOW()),
(30, 30, 5, 250, 145, 70, NOW(), NOW()),
(31, 31, 3, 200, 116, 60, NOW(), NOW()),
(32, 32, 4, 220, 133, 65, NOW(), NOW()),
(33, 33, 5, 250, 145, 70, NOW(), NOW()),
(34, 34, 3, 200, 116, 60, NOW(), NOW()),
(35, 35, 4, 220, 133, 65, NOW(), NOW()),
(36, 36, 5, 250, 145, 70, NOW(), NOW()),
(37, 37, 3, 200, 116, 60, NOW(), NOW()),
(38, 38, 4, 220, 133, 65, NOW(), NOW()),
(39, 39, 5, 250, 145, 70, NOW(), NOW()),
(40, 40, 3, 200, 116, 60, NOW(), NOW()),
(41, 41, 4, 220, 133, 65, NOW(), NOW()),
(42, 42, 5, 250, 145, 70, NOW(), NOW()),
(43, 43, 3, 200, 116, 60, NOW(), NOW()),
(44, 44, 4, 220, 133, 65, NOW(), NOW()),
(45, 45, 5, 250, 145, 70, NOW(), NOW()),
(46, 46, 3, 200, 116, 60, NOW(), NOW()),
(47, 47, 4, 220, 133, 65, NOW(), NOW()),
(48, 48, 5, 250, 145, 70, NOW(), NOW()),
(49, 49, 3, 200, 116, 60, NOW(), NOW()),
(50, 50, 4, 220, 133, 65, NOW(), NOW()); 


INSERT INTO health_records (health_record_id, user_id, weight, bmi, record_date, created_at) VALUES
(1, 1, 65.20, 20.5, CURRENT_DATE - 49, NOW()),
(2, 2, 70.10, 23.1, CURRENT_DATE - 48, NOW()),
(3, 3, 72.54, 23.7, CURRENT_DATE - 47, NOW()),
(4, 4, 60.90, 19.2, CURRENT_DATE - 46, NOW()),
(5, 5, 79.23, 24.5, CURRENT_DATE - 45, NOW()),
(6, 6, 67.42, 21.0, CURRENT_DATE - 44, NOW()),
(7, 7, 71.04, 23.2, CURRENT_DATE - 43, NOW()),
(8, 8, 62.39, 20.3, CURRENT_DATE - 42, NOW()),
(9, 9, 74.97, 24.1, CURRENT_DATE - 41, NOW()),
(10, 10, 79.11, 24.9, CURRENT_DATE - 40, NOW()),
(11, 11, 65.32, 20.4, CURRENT_DATE - 39, NOW()),
(12, 12, 60.79, 19.9, CURRENT_DATE - 38, NOW()),
(13, 13, 72.04, 23.3, CURRENT_DATE - 37, NOW()),
(14, 14, 78.45, 24.7, CURRENT_DATE - 36, NOW()),
(15, 15, 74.32, 24.0, CURRENT_DATE - 35, NOW()),
(16, 16, 61.54, 20.1, CURRENT_DATE - 34, NOW()),
(17, 17, 79.79, 25.0, CURRENT_DATE - 33, NOW()),
(18, 18, 60.47, 19.5, CURRENT_DATE - 32, NOW()),
(19, 19, 67.97, 21.2, CURRENT_DATE - 31, NOW()),
(20, 20, 71.23, 23.1, CURRENT_DATE - 30, NOW()),
(21, 21, 79.04, 24.9, CURRENT_DATE - 29, NOW()),
(22, 22, 60.32, 20.0, CURRENT_DATE - 28, NOW()),
(23, 23, 74.67, 24.2, CURRENT_DATE - 27, NOW()),
(24, 24, 79.31, 25.0, CURRENT_DATE - 26, NOW()),
(25, 25, 71.79, 23.0, CURRENT_DATE - 25, NOW()),
(26, 26, 60.45, 19.7, CURRENT_DATE - 24, NOW()),
(27, 27, 79.04, 24.9, CURRENT_DATE - 23, NOW()),
(28, 28, 72.97, 23.6, CURRENT_DATE - 22, NOW()),
(29, 29, 61.39, 20.1, CURRENT_DATE - 21, NOW()),
(30, 30, 79.97, 25.0, CURRENT_DATE - 20, NOW()),
(31, 31, 65.79, 20.7, CURRENT_DATE - 19, NOW()),
(32, 32, 60.04, 19.3, CURRENT_DATE - 18, NOW()),
(33, 33, 79.04, 24.9, CURRENT_DATE - 17, NOW()),
(34, 34, 71.42, 23.0, CURRENT_DATE - 16, NOW()),
(35, 35, 60.97, 20.1, CURRENT_DATE - 15, NOW()),
(36, 36, 79.04, 24.9, CURRENT_DATE - 14, NOW()),
(37, 37, 74.79, 24.2, CURRENT_DATE - 13, NOW()),
(38, 38, 60.04, 19.3, CURRENT_DATE - 12, NOW()),
(39, 39, 79.04, 24.9, CURRENT_DATE - 11, NOW()),
(40, 40, 61.04, 20.0, CURRENT_DATE - 10, NOW()),
(41, 41, 72.04, 23.2, CURRENT_DATE - 9, NOW()),
(42, 42, 79.04, 24.9, CURRENT_DATE - 8, NOW()),
(43, 43, 60.04, 19.4, CURRENT_DATE - 7, NOW()),
(44, 44, 79.04, 24.9, CURRENT_DATE - 6, NOW()),
(45, 45, 61.04, 20.0, CURRENT_DATE - 5, NOW()),
(46, 46, 79.04, 24.9, CURRENT_DATE - 4, NOW()),
(47, 47, 60.04, 19.5, CURRENT_DATE - 3, NOW()),
(48, 48, 79.04, 24.9, CURRENT_DATE - 2, NOW()),
(49, 49, 61.04, 20.0, CURRENT_DATE - 1, NOW()),
(50, 50, 79.04, 24.9, CURRENT_DATE, NOW()); 


INSERT INTO exercise_catalog (exercise_catalog_id, name, body_part, description, intensity, created_at) VALUES
(1, '벤치프레스', '가슴', '가슴 근육 발달을 위한 대표적인 운동', '고강도', NOW()),
(2, '푸쉬업', '가슴', '체중을 이용한 기본 가슴 운동', '중강도', NOW()),
(3, '랫풀다운', '등', '광배근 강화 운동', '중강도', NOW()),
(4, '데드리프트', '하체', '하체와 등 근육을 함께 사용하는 복합 운동', '고강도', NOW()),
(5, '스쿼트', '하체', '하체 근력 강화의 기본 운동', '고강도', NOW()),
(6, '숄더프레스', '어깨', '어깨 근육을 강화하는 대표 운동', '중강도', NOW()),
(7, '플랭크', '복근', '복근 및 코어 근육 강화 운동', '저강도', NOW()),
(8, '바이셉 컬', '팔', '이두근 집중 운동', '중강도', NOW()),
(9, '트라이셉스 익스텐션', '팔', '삼두근 강화 운동', '중강도', NOW()),
(10, '러닝머신', '유산소', '심폐지구력 향상을 위한 러닝', '중강도', NOW()),
(11, '체스트 플라이', '가슴', '가슴 중앙 부위 집중 운동', '중강도', NOW()),
(12, '풀업', '등', '체중을 이용한 등 근력 강화 운동', '고강도', NOW()),
(13, '레그프레스', '하체', '하체 근력 강화 머신 운동', '고강도', NOW()),
(14, '사이드 레터럴 레이즈', '어깨', '어깨 측면 근육 강화', '저강도', NOW()),
(15, '크런치', '복근', '복부 근육을 단련하는 기본 운동', '저강도', NOW()),
(16, '덤벨 컬', '팔', '팔 근육 집중 강화', '중강도', NOW()),
(17, '버피', '유산소', '전신을 사용하는 고강도 유산소 운동', '고강도', NOW()),
(18, '인클라인 벤치프레스', '가슴', '상부 가슴 근육 강화 운동', '고강도', NOW()),
(19, '시티드 로우', '등', '등 근육을 고르게 발달시키는 운동', '중강도', NOW()),
(20, '런지', '하체', '허벅지와 엉덩이 근육 강화', '중강도', NOW()),
(21, '프론트 레이즈', '어깨', '어깨 전면 근육 강화', '저강도', NOW()),
(22, '마운틴 클라이머', '복근', '복부와 심폐지구력 강화', '고강도', NOW()),
(23, '트라이셉스 딥스', '팔', '삼두근 집중 운동', '중강도', NOW()),
(24, '싸이클링', '유산소', '심폐 기능과 하체 근력 강화', '중강도', NOW()),
(25, '케이블 크로스오버', '가슴', '가슴 근육을 스트레칭하며 강화', '중강도', NOW()),
(26, '바벨 로우', '등', '등 근육 발달 복합 운동', '고강도', NOW()),
(27, '레그 컬', '하체', '허벅지 뒤쪽 근육 집중 운동', '중강도', NOW()),
(28, '업라이트 로우', '어깨', '어깨 및 승모근 강화', '중강도', NOW()),
(29, '레그 레이즈', '복근', '하복부 집중 운동', '저강도', NOW()),
(30, '해머 컬', '팔', '이두근 다양한 자극 운동', '중강도', NOW()),
(31, '점핑잭', '유산소', '전신 유산소 운동', '저강도', NOW()),
(32, '딥스', '가슴', '가슴 및 삼두근 강화 운동', '고강도', NOW()),
(33, '친업', '등', '상체와 등 근육 강화', '고강도', NOW()),
(34, '스텝업', '하체', '하체 균형 및 근력 강화', '중강도', NOW()),
(35, '페이스 풀', '어깨', '어깨 후면 근육 강화', '저강도', NOW()),
(36, '시저스', '복근', '복부와 하체 근육 강화 운동', '저강도', NOW()),
(37, '케이블 트라이셉스 푸쉬다운', '팔', '삼두근 집중 운동', '중강도', NOW()),
(38, '줄넘기', '유산소', '전신 심폐지구력 향상 운동', '고강도', NOW()),
(39, '펙덱 플라이', '가슴', '가슴 근육 스트레칭 및 강화', '중강도', NOW()),
(40, '백 익스텐션', '등', '허리 및 등 근육 강화', '저강도', NOW()),
(41, '힙 쓰러스트', '하체', '엉덩이 근육 집중 강화', '고강도', NOW()),
(42, '덤벨 숄더 프레스', '어깨', '어깨 전반적인 근육 강화', '중강도', NOW()),
(43, '바이시클 크런치', '복근', '복부와 옆구리 근육 강화', '중강도', NOW()),
(44, '컨센트레이션 컬', '팔', '이두근 집중 운동', '저강도', NOW()),
(45, '트레드밀 인터벌', '유산소', '고강도 인터벌 러닝 운동', '고강도', NOW()),
(46, '체스트 딥스', '가슴', '가슴과 삼두근 강화', '고강도', NOW()),
(47, '케이블 로우', '등', '등 근육 균형 강화 운동', '중강도', NOW()),
(48, '글루트 브리지', '하체', '엉덩이 근육 강화 운동', '저강도', NOW()),
(49, '아놀드 프레스', '어깨', '어깨 전면 및 측면 근육 강화', '중강도', NOW()),
(50, '플랭크 잭', '복근', '코어와 심폐지구력 강화 운동', '고강도', NOW());



INSERT INTO exercise_sessions (exercise_session_id, user_id, exercise_catalog_id, duration_minutes, calories_burned, notes, exercise_date, created_at) VALUES
(1, 1, 5, 45, 400, '스쿼트 집중', '2025-05-10', NOW()),
(2, 2, 10, 30, 250, '러닝머신 가볍게', '2025-04-22', NOW()),
(3, 3, 12, 60, 550, '친업 도전', '2025-03-15', NOW()),
(4, 4, 1, 40, 420, '벤치프레스 성공', '2025-02-28', NOW()),
(5, 5, 7, 15, 120, '플랭크 짧게', '2025-01-20', NOW()),
(6, 6, 17, 25, 300, '버피 고강도', '2025-04-10', NOW()),
(7, 7, 20, 35, 320, '런지 꾸준히', '2025-05-05', NOW()),
(8, 8, 29, 20, 150, '레그 레이즈 집중', '2025-05-12', NOW()),
(9, 9, 9, 50, 450, '트라이셉스 익스텐션', '2025-03-30', NOW()),
(10, 10, 38, 40, 500, '줄넘기 집중', '2025-02-14', NOW()),
(11, 11, 4, 70, 600, '데드리프트 고중량', '2025-01-25', NOW()),
(12, 12, 31, 15, 130, '점핑잭 재밌음', '2025-04-28', NOW()),
(13, 13, 13, 55, 480, '레그프레스 열심히', '2025-05-17', NOW()),
(14, 14, 2, 25, 200, '푸쉬업 꾸준히', '2025-03-10', NOW()),
(15, 15, 26, 60, 540, '바벨 로우 집중', '2025-02-21', NOW()),
(16, 16, 36, 20, 170, '시저스 운동', '2025-04-05', NOW()),
(17, 17, 14, 30, 280, '사이드 레터럴 레이즈', '2025-01-30', NOW()),
(18, 18, 27, 40, 400, '레그 컬 고중량', '2025-03-22', NOW()),
(19, 19, 3, 45, 430, '랫풀다운 집중', '2025-05-20', NOW()),
(20, 20, 8, 25, 220, '바이셉 컬 집중', '2025-04-08', NOW()),
(21, 21, 15, 15, 130, '크런치 반복', '2025-02-10', NOW()),
(22, 22, 35, 25, 200, '페이스 풀', '2025-01-18', NOW()),
(23, 23, 23, 30, 260, '트라이셉스 딥스', '2025-03-27', NOW()),
(24, 24, 37, 35, 340, '케이블 푸쉬다운', '2025-05-01', NOW()),
(25, 25, 6, 40, 410, '숄더프레스 도전', '2025-04-19', NOW()),
(26, 26, 39, 50, 460, '펙덱 플라이', '2025-02-05', NOW()),
(27, 27, 41, 60, 570, '힙 쓰러스트', '2025-03-02', NOW()),
(28, 28, 24, 30, 290, '싸이클링 30분', '2025-05-14', NOW()),
(29, 29, 28, 20, 190, '업라이트 로우', '2025-04-11', NOW()),
(30, 30, 40, 45, 440, '백 익스텐션', '2025-01-27', NOW()),
(31, 31, 34, 35, 360, '스텝업', '2025-03-12', NOW()),
(32, 32, 43, 30, 300, '바이시클 크런치', '2025-04-25', NOW()),
(33, 33, 16, 25, 230, '덤벨 컬', '2025-02-17', NOW()),
(34, 34, 18, 50, 480, '인클라인 벤치프레스', '2025-05-08', NOW()),
(35, 35, 19, 45, 420, '시티드 로우', '2025-03-19', NOW()),
(36, 36, 30, 20, 180, '레그 레이즈', '2025-01-15', NOW()),
(37, 37, 25, 35, 350, '케이블 크로스오버', '2025-04-06', NOW()),
(38, 38, 22, 40, 400, '마운틴 클라이머', '2025-02-24', NOW()),
(39, 39, 42, 55, 520, '덤벨 숄더 프레스', '2025-05-02', NOW()),
(40, 40, 33, 60, 600, '스쿼트 고중량', '2025-04-14', NOW()),
(41, 41, 21, 25, 220, '프론트 레이즈', '2025-03-06', NOW()),
(42, 42, 44, 30, 260, '컨센트레이션 컬', '2025-01-23', NOW()),
(43, 43, 45, 20, 210, '트레드밀 인터벌', '2025-05-09', NOW()),
(44, 44, 32, 50, 480, '레그프레스', '2025-02-02', NOW()),
(45, 45, 46, 40, 430, '체스트 딥스', '2025-04-28', NOW()),
(46, 46, 47, 30, 320, '케이블 로우', '2025-03-23', NOW()),
(47, 47, 49, 35, 360, '아놀드 프레스', '2025-01-29', NOW()),
(48, 48, 48, 20, 190, '글루트 브리지', '2025-04-10', NOW()),
(49, 49, 11, 45, 410, '체스트 플라이', '2025-02-20', NOW()),
(50, 50, 13, 55, 520, '레그프레스 집중', '2025-05-16', NOW());




INSERT INTO food_items (food_item_id, food_code, name, serving_size, calories, carbs, protein, fat, created_at) VALUES
(1, 'F00001', '닭가슴살', 100.00, 165.00, 0.00, 31.00, 3.60, NOW()),
(2, 'F00002', '현미밥', 150.00, 200.00, 45.00, 4.00, 1.50, NOW()),
(3, 'F00003', '바나나', 120.00, 105.00, 27.00, 1.30, 0.30, NOW()),
(4, 'F00004', '계란후라이', 50.00, 90.00, 1.00, 6.00, 7.00, NOW()),
(5, 'F00005', '사과', 130.00, 65.00, 17.00, 0.30, 0.20, NOW()),
(6, 'F00006', '연어구이', 120.00, 240.00, 0.00, 22.00, 15.00, NOW()),
(7, 'F00007', '브로콜리', 90.00, 30.00, 6.00, 3.00, 0.30, NOW()),
(8, 'F00008', '두부', 100.00, 80.00, 2.00, 8.00, 5.00, NOW()),
(9, 'F00009', '고구마', 130.00, 110.00, 26.00, 2.00, 0.10, NOW()),
(10, 'F00010', '참치캔', 90.00, 180.00, 0.00, 40.00, 1.50, NOW()),
(11, 'F00011', '치킨가슴살', 100.00, 165.00, 0.00, 31.00, 3.60, NOW()),
(12, 'F00012', '오트밀', 40.00, 150.00, 27.00, 5.00, 3.00, NOW()),
(13, 'F00013', '아몬드', 30.00, 170.00, 6.00, 6.00, 15.00, NOW()),
(14, 'F00014', '두유', 200.00, 90.00, 8.00, 7.00, 3.00, NOW()),
(15, 'F00015', '우유', 200.00, 130.00, 12.00, 8.00, 5.00, NOW()),
(16, 'F00016', '양상추', 50.00, 10.00, 2.00, 1.00, 0.10, NOW()),
(17, 'F00017', '감자', 150.00, 110.00, 26.00, 2.00, 0.10, NOW()),
(18, 'F00018', '소고기 등심', 100.00, 250.00, 0.00, 26.00, 15.00, NOW()),
(19, 'F00019', '파프리카', 80.00, 40.00, 9.00, 1.00, 0.20, NOW()),
(20, 'F00020', '김치', 50.00, 15.00, 3.00, 1.00, 0.10, NOW()),
(21, 'F00021', '아보카도', 100.00, 160.00, 9.00, 2.00, 15.00, NOW()),
(22, 'F00022', '오렌지', 130.00, 70.00, 18.00, 1.00, 0.10, NOW()),
(23, 'F00023', '그릭 요거트', 150.00, 100.00, 6.00, 10.00, 0.50, NOW()),
(24, 'F00024', '닭다리', 100.00, 180.00, 0.00, 24.00, 8.00, NOW()),
(25, 'F00025', '새우', 100.00, 85.00, 0.00, 20.00, 1.00, NOW()),
(26, 'F00026', '현미빵', 50.00, 140.00, 30.00, 4.00, 2.00, NOW()),
(27, 'F00027', '바질', 10.00, 5.00, 1.00, 0.50, 0.10, NOW()),
(28, 'F00028', '시금치', 50.00, 15.00, 2.00, 2.00, 0.20, NOW()),
(29, 'F00029', '호두', 30.00, 200.00, 4.00, 5.00, 20.00, NOW()),
(30, 'F00030', '토마토', 100.00, 20.00, 4.00, 1.00, 0.20, NOW()),
(31, 'F00031', '돼지고기 삼겹살', 100.00, 300.00, 0.00, 20.00, 25.00, NOW()),
(32, 'F00032', '카레', 150.00, 180.00, 25.00, 6.00, 7.00, NOW()),
(33, 'F00033', '감자튀김', 100.00, 312.00, 40.00, 3.40, 15.00, NOW()),
(34, 'F00034', '두부조림', 100.00, 120.00, 5.00, 10.00, 6.00, NOW()),
(35, 'F00035', '김밥', 200.00, 350.00, 55.00, 10.00, 5.00, NOW()),
(36, 'F00036', '우유 아이스크림', 80.00, 150.00, 20.00, 3.00, 6.00, NOW()),
(37, 'F00037', '샐러드', 150.00, 100.00, 10.00, 3.00, 4.00, NOW()),
(38, 'F00038', '생선구이', 120.00, 180.00, 0.00, 22.00, 9.00, NOW()),
(39, 'F00039', '스파게티', 180.00, 280.00, 45.00, 8.00, 6.00, NOW()),
(40, 'F00040', '닭볶음탕', 150.00, 220.00, 15.00, 25.00, 8.00, NOW()),
(41, 'F00041', '두유 라떼', 250.00, 160.00, 20.00, 7.00, 5.00, NOW()),
(42, 'F00042', '떡볶이', 200.00, 300.00, 55.00, 7.00, 4.00, NOW()),
(43, 'F00043', '라면', 120.00, 500.00, 70.00, 10.00, 20.00, NOW()),
(44, 'F00044', '김치찌개', 200.00, 150.00, 10.00, 12.00, 8.00, NOW()),
(45, 'F00045', '불고기', 150.00, 250.00, 10.00, 25.00, 10.00, NOW()),
(46, 'F00046', '오징어볶음', 130.00, 180.00, 12.00, 20.00, 5.00, NOW()),
(47, 'F00047', '미역국', 200.00, 90.00, 5.00, 8.00, 3.00, NOW()),
(48, 'F00048', '치즈', 30.00, 120.00, 1.00, 7.00, 10.00, NOW()),
(49, 'F00049', '요거트', 100.00, 60.00, 8.00, 4.00, 1.00, NOW()),
(50, 'F00050', '감자샐러드', 150.00, 200.00, 25.00, 5.00, 10.00, NOW());




INSERT INTO meal_logs (meal_log_id, user_id, food_item_id, quantity, log_date, created_at) VALUES
(1, 2, 10, 1.50, '2025-06-01', NOW()),
(2, 5, 3, 2.00, '2025-06-02', NOW()),
(3, 1, 25, 1.00, '2025-06-01', NOW()),
(4, 7, 14, 0.75, '2025-06-03', NOW()),
(5, 3, 8, 2.50, '2025-06-02', NOW()),
(6, 6, 19, 1.25, '2025-06-05', NOW()),
(7, 8, 2, 1.00, '2025-06-01', NOW()),
(8, 4, 35, 2.00, '2025-06-04', NOW()),
(9, 10, 22, 1.50, '2025-06-07', NOW()),
(10, 9, 12, 0.80, '2025-06-05', NOW()),
(11, 1, 7, 1.00, '2025-06-03', NOW()),
(12, 2, 30, 2.00, '2025-06-06', NOW()),
(13, 3, 11, 1.50, '2025-06-02', NOW()),
(14, 5, 18, 1.25, '2025-06-01', NOW()),
(15, 7, 9, 0.50, '2025-06-04', NOW()),
(16, 6, 24, 1.75, '2025-06-06', NOW()),
(17, 8, 4, 2.50, '2025-06-03', NOW()),
(18, 4, 20, 1.00, '2025-06-05', NOW()),
(19, 10, 1, 1.25, '2025-06-02', NOW()),
(20, 9, 16, 2.00, '2025-06-04', NOW()),
(21, 1, 13, 0.75, '2025-06-01', NOW()),
(22, 2, 29, 1.50, '2025-06-07', NOW()),
(23, 3, 21, 2.00, '2025-06-06', NOW()),
(24, 5, 17, 1.25, '2025-06-03', NOW()),
(25, 7, 33, 1.00, '2025-06-05', NOW()),
(26, 6, 27, 2.50, '2025-06-04', NOW()),
(27, 8, 5, 1.75, '2025-06-07', NOW()),
(28, 4, 26, 1.00, '2025-06-06', NOW()),
(29, 10, 23, 2.00, '2025-06-01', NOW()),
(30, 9, 15, 1.50, '2025-06-03', NOW()),
(31, 1, 34, 1.25, '2025-06-02', NOW()),
(32, 2, 32, 0.80, '2025-06-04', NOW()),
(33, 3, 36, 2.00, '2025-06-05', NOW()),
(34, 5, 31, 1.75, '2025-06-06', NOW()),
(35, 7, 28, 1.25, '2025-06-07', NOW()),
(36, 6, 40, 1.50, '2025-06-02', NOW()),
(37, 8, 37, 2.00, '2025-06-03', NOW()),
(38, 4, 38, 1.00, '2025-06-01', NOW()),
(39, 10, 41, 0.75, '2025-06-04', NOW()),
(40, 9, 39, 2.50, '2025-06-05', NOW()),
(41, 1, 43, 1.00, '2025-06-06', NOW()),
(42, 2, 42, 1.25, '2025-06-07', NOW()),
(43, 3, 44, 2.00, '2025-06-03', NOW()),
(44, 5, 45, 0.80, '2025-06-01', NOW()),
(45, 7, 46, 1.50, '2025-06-02', NOW()),
(46, 6, 47, 2.00, '2025-06-04', NOW()),
(47, 8, 48, 1.75, '2025-06-05', NOW()),
(48, 4, 49, 1.00, '2025-06-06', NOW()),
(49, 10, 50, 0.50, '2025-06-07', NOW()),
(50, 9, 6, 1.25, '2025-06-01', NOW());


INSERT INTO user_rankings (user_ranking_id, user_id, total_score, streak_days, rank_position, last_updated) VALUES
(1, 1, 8750, 45, 1, NOW()),
(2, 2, 8600, 42, 2, NOW()),
(3, 3, 8450, 38, 3, NOW()),
(4, 4, 8300, 37, 4, NOW()),
(5, 5, 8150, 35, 5, NOW()),
(6, 6, 8000, 34, 6, NOW()),
(7, 7, 7850, 33, 7, NOW()),
(8, 8, 7700, 32, 8, NOW()),
(9, 9, 7550, 30, 9, NOW()),
(10, 10, 7400, 29, 10, NOW()),
(11, 11, 7250, 28, 11, NOW()),
(12, 12, 7100, 27, 12, NOW()),
(13, 13, 6950, 26, 13, NOW()),
(14, 14, 6800, 25, 14, NOW()),
(15, 15, 6650, 24, 15, NOW()),
(16, 16, 6500, 23, 16, NOW()),
(17, 17, 6350, 22, 17, NOW()),
(18, 18, 6200, 21, 18, NOW()),
(19, 19, 6050, 20, 19, NOW()),
(20, 20, 5900, 19, 20, NOW()),
(21, 21, 5750, 18, 21, NOW()),
(22, 22, 5600, 17, 22, NOW()),
(23, 23, 5450, 16, 23, NOW()),
(24, 24, 5300, 15, 24, NOW()),
(25, 25, 5150, 14, 25, NOW()),
(26, 26, 5000, 13, 26, NOW()),
(27, 27, 4850, 12, 27, NOW()),
(28, 28, 4700, 11, 28, NOW()),
(29, 29, 4550, 10, 29, NOW()),
(30, 30, 4400, 9, 30, NOW()),
(31, 31, 4250, 8, 31, NOW()),
(32, 32, 4100, 7, 32, NOW()),
(33, 33, 3950, 6, 33, NOW()),
(34, 34, 3800, 5, 34, NOW()),
(35, 35, 3650, 4, 35, NOW()),
(36, 36, 3500, 3, 36, NOW()),
(37, 37, 3350, 2, 37, NOW()),
(38, 38, 3200, 1, 38, NOW()),
(39, 39, 3050, 0, 39, NOW()),
(40, 40, 2900, 0, 40, NOW()),
(41, 41, 2750, 0, 41, NOW()),
(42, 42, 2600, 0, 42, NOW()),
(43, 43, 2450, 0, 43, NOW()),
(44, 44, 2300, 0, 44, NOW()),
(45, 45, 2150, 0, 45, NOW()),
(46, 46, 2000, 0, 46, NOW()),
(47, 47, 1850, 0, 47, NOW()),
(48, 48, 1700, 0, 48, NOW()),
(49, 49, 1550, 0, 49, NOW()),
(50, 50, 1400, 0, 50, NOW());



INSERT INTO achievements (achievement_id, title, description, badge_type, target_days, is_active, created_at) VALUES
(1, '첫 운동 완료', '처음으로 운동 세션을 완료했습니다.', 'bronze', 1, TRUE, NOW()),
(2, '3일 연속 운동', '3일 연속으로 운동을 완료했습니다.', 'bronze', 3, TRUE, NOW()),
(3, '1주일 운동 달성', '일주일 동안 꾸준히 운동을 했습니다.', 'silver', 7, TRUE, NOW()),
(4, '2주일 연속 운동', '2주일 동안 연속 운동 기록을 달성했습니다.', 'silver', 14, TRUE, NOW()),
(5, '한 달 운동 달성', '한 달 동안 꾸준히 운동을 했습니다.', 'gold', 30, TRUE, NOW()),
(6, '50일 운동 달성', '50일간 연속 운동 목표를 달성했습니다.', 'gold', 50, TRUE, NOW()),
(7, '100일 운동 달성', '100일 연속 운동 기록을 달성했습니다.', 'platinum', 100, TRUE, NOW()),
(8, '첫 유산소 운동', '처음으로 유산소 운동을 완료했습니다.', 'bronze', 1, TRUE, NOW()),
(9, '가슴 운동 마스터', '가슴 운동을 10회 완료했습니다.', 'silver', 10, TRUE, NOW()),
(10, '등 운동 마스터', '등 운동을 10회 완료했습니다.', 'silver', 10, TRUE, NOW()),
(11, '하체 운동 마스터', '하체 운동을 10회 완료했습니다.', 'silver', 10, TRUE, NOW()),
(12, '어깨 운동 마스터', '어깨 운동을 10회 완료했습니다.', 'silver', 10, TRUE, NOW()),
(13, '복근 운동 마스터', '복근 운동을 10회 완료했습니다.', 'silver', 10, TRUE, NOW()),
(14, '팔 운동 마스터', '팔 운동을 10회 완료했습니다.', 'silver', 10, TRUE, NOW()),
(15, '5000 칼로리 소모', '누적 5000 칼로리를 소모했습니다.', 'gold', NULL, TRUE, NOW()),
(16, '10000 칼로리 소모', '누적 10000 칼로리를 소모했습니다.', 'platinum', NULL, TRUE, NOW()),
(17, '체중 감량 5kg', '체중 5kg 감량에 성공했습니다.', 'gold', NULL, TRUE, NOW()),
(18, '체중 감량 10kg', '체중 10kg 감량에 성공했습니다.', 'platinum', NULL, TRUE, NOW()),
(19, '단백질 목표 달성', '하루 단백질 섭취 목표를 30일간 달성했습니다.', 'silver', 30, TRUE, NOW()),
(20, '탄수화물 목표 달성', '하루 탄수화물 섭취 목표를 30일간 달성했습니다.', 'silver', 30, TRUE, NOW()),
(21, '지방 목표 달성', '하루 지방 섭취 목표를 30일간 달성했습니다.', 'silver', 30, TRUE, NOW()),
(22, '운동 일지 100회 작성', '운동 기록을 100회 작성했습니다.', 'gold', NULL, TRUE, NOW()),
(23, '첫 식단 기록', '첫 식단 기록을 작성했습니다.', 'bronze', 1, TRUE, NOW()),
(24, '식단 기록 50회', '식단 기록을 50회 작성했습니다.', 'silver', NULL, TRUE, NOW()),
(25, '식단 기록 100회', '식단 기록을 100회 작성했습니다.', 'gold', NULL, TRUE, NOW()),
(26, '7일 연속 식단 기록', '7일 연속 식단 기록을 작성했습니다.', 'silver', 7, TRUE, NOW()),
(27, '운동 10시간 달성', '누적 운동 시간이 10시간을 넘었습니다.', 'gold', NULL, TRUE, NOW()),
(28, '운동 20시간 달성', '누적 운동 시간이 20시간을 넘었습니다.', 'platinum', NULL, TRUE, NOW()),
(29, '첫 목표 달성', '설정한 운동 목표를 처음으로 달성했습니다.', 'bronze', 1, TRUE, NOW()),
(30, '목표 10회 달성', '운동 목표를 10회 달성했습니다.', 'silver', 10, TRUE, NOW()),
(31, '목표 30회 달성', '운동 목표를 30회 달성했습니다.', 'gold', 30, TRUE, NOW()),
(32, '목표 50회 달성', '운동 목표를 50회 달성했습니다.', 'platinum', 50, TRUE, NOW()),
(33, '100km 달리기 완료', '누적 100km 달리기 성공.', 'gold', NULL, TRUE, NOW()),
(34, '마라톤 완주', '마라톤 완주에 성공했습니다.', 'platinum', NULL, TRUE, NOW()),
(35, '첫 10kg 중량 들기', '처음으로 10kg 이상의 중량을 들었습니다.', 'bronze', 1, TRUE, NOW()),
(36, '중량 30kg 돌파', '30kg 이상의 중량을 들었습니다.', 'silver', NULL, TRUE, NOW()),
(37, '중량 50kg 돌파', '50kg 이상의 중량을 들었습니다.', 'gold', NULL, TRUE, NOW()),
(38, '중량 70kg 돌파', '70kg 이상의 중량을 들었습니다.', 'platinum', NULL, TRUE, NOW()),
(39, '운동 친구 초대', '친구를 운동 앱에 초대했습니다.', 'bronze', NULL, TRUE, NOW()),
(40, '친구 10명 초대', '친구 10명을 운동 앱에 초대했습니다.', 'silver', NULL, TRUE, NOW()),
(41, '친구 50명 초대', '친구 50명을 운동 앱에 초대했습니다.', 'gold', NULL, TRUE, NOW()),
(42, '친구 100명 초대', '친구 100명을 운동 앱에 초대했습니다.', 'platinum', NULL, TRUE, NOW()),
(43, '일주일 연속 유산소 운동', '일주일 연속 유산소 운동 달성.', 'silver', 7, TRUE, NOW()),
(44, '한 달 연속 유산소 운동', '한 달 연속 유산소 운동 달성.', 'gold', 30, TRUE, NOW()),
(45, '첫 복근 운동', '처음 복근 운동을 완료했습니다.', 'bronze', 1, TRUE, NOW()),
(46, '복근 운동 20회', '복근 운동을 20회 완료했습니다.', 'silver', 20, TRUE, NOW()),
(47, '복근 운동 50회', '복근 운동을 50회 완료했습니다.', 'gold', 50, TRUE, NOW()),
(48, '첫 팔 운동', '처음 팔 운동을 완료했습니다.', 'bronze', 1, TRUE, NOW()),
(49, '팔 운동 20회', '팔 운동을 20회 완료했습니다.', 'silver', 20, TRUE, NOW()),
(50, '팔 운동 50회', '팔 운동을 50회 완료했습니다.', 'gold', 50, TRUE, NOW());



INSERT INTO user_achievements (user_achievement_id, user_id, achievement_id, is_achieved, progress, achieved_date, created_at) VALUES
(1, 1, 1, TRUE, 100, '2025-06-01', NOW()),
(2, 2, 2, FALSE, 40, NULL, NOW()),
(3, 3, 3, TRUE, 100, '2025-06-05', NOW()),
(4, 4, 4, FALSE, 20, NULL, NOW()),
(5, 5, 5, TRUE, 100, '2025-06-07', NOW()),
(6, 6, 6, FALSE, 70, NULL, NOW()),
(7, 7, 7, TRUE, 100, '2025-06-10', NOW()),
(8, 8, 8, FALSE, 55, NULL, NOW()),
(9, 9, 9, TRUE, 100, '2025-06-11', NOW()),
(10, 10, 10, FALSE, 30, NULL, NOW()),
(11, 1, 11, TRUE, 100, '2025-06-12', NOW()),
(12, 2, 12, FALSE, 25, NULL, NOW()),
(13, 3, 13, TRUE, 100, '2025-06-13', NOW()),
(14, 4, 14, FALSE, 60, NULL, NOW()),
(15, 5, 15, TRUE, 100, '2025-06-14', NOW()),
(16, 6, 16, FALSE, 15, NULL, NOW()),
(17, 7, 17, TRUE, 100, '2025-06-15', NOW()),
(18, 8, 18, FALSE, 35, NULL, NOW()),
(19, 9, 19, TRUE, 100, '2025-06-16', NOW()),
(20, 10, 20, FALSE, 45, NULL, NOW()),
(21, 1, 21, TRUE, 100, '2025-06-17', NOW()),
(22, 2, 22, FALSE, 50, NULL, NOW()),
(23, 3, 23, TRUE, 100, '2025-06-18', NOW()),
(24, 4, 24, FALSE, 10, NULL, NOW()),
(25, 5, 25, TRUE, 100, '2025-06-19', NOW()),
(26, 6, 26, FALSE, 65, NULL, NOW()),
(27, 7, 27, TRUE, 100, '2025-06-20', NOW()),
(28, 8, 28, FALSE, 80, NULL, NOW()),
(29, 9, 29, TRUE, 100, '2025-06-21', NOW()),
(30, 10, 30, FALSE, 55, NULL, NOW()),
(31, 1, 31, TRUE, 100, '2025-06-22', NOW()),
(32, 2, 32, FALSE, 20, NULL, NOW()),
(33, 3, 33, TRUE, 100, '2025-06-23', NOW()),
(34, 4, 34, FALSE, 40, NULL, NOW()),
(35, 5, 35, TRUE, 100, '2025-06-24', NOW()),
(36, 6, 36, FALSE, 30, NULL, NOW()),
(37, 7, 37, TRUE, 100, '2025-06-25', NOW()),
(38, 8, 38, FALSE, 60, NULL, NOW()),
(39, 9, 39, TRUE, 100, '2025-06-26', NOW()),
(40, 10, 40, FALSE, 45, NULL, NOW()),
(41, 1, 41, TRUE, 100, '2025-06-27', NOW()),
(42, 2, 42, FALSE, 70, NULL, NOW()),
(43, 3, 43, TRUE, 100, '2025-06-28', NOW()),
(44, 4, 44, FALSE, 25, NULL, NOW()),
(45, 5, 45, TRUE, 100, '2025-06-29', NOW()),
(46, 6, 46, FALSE, 35, NULL, NOW()),
(47, 7, 47, TRUE, 100, '2025-06-30', NOW()),
(48, 8, 48, FALSE, 50, NULL, NOW()),
(49, 9, 49, TRUE, 100, '2025-07-01', NOW()),
(50, 10, 50, FALSE, 20, NULL, NOW());



INSERT INTO recommendation (recommendation_id, user_id, item_id, recommendation_data, created_at) VALUES
(1, 1, 5, '{"reason": "고단백 식품 추천", "score": 0.95}', NOW()),
(2, 2, 12, '{"reason": "운동 후 회복에 도움", "score": 0.88}', NOW()),
(3, 3, 8, '{"reason": "유산소 운동에 적합", "score": 0.92}', NOW()),
(4, 4, 20, '{"reason": "체중 감량 목표에 적합", "score": 0.85}', NOW()),
(5, 5, 3, '{"reason": "근육량 증가 도움", "score": 0.90}', NOW()),
(6, 6, 15, '{"reason": "지방 연소 촉진", "score": 0.87}', NOW()),
(7, 7, 10, '{"reason": "복근 강화에 좋음", "score": 0.93}', NOW()),
(8, 8, 22, '{"reason": "지속적 운동 추천", "score": 0.89}', NOW()),
(9, 9, 17, '{"reason": "에너지 보충에 적합", "score": 0.91}', NOW()),
(10, 10, 25, '{"reason": "체력 증진 도움", "score": 0.86}', NOW()),
(11, 1, 30, '{"reason": "유산소 강화 프로그램", "score": 0.84}', NOW()),
(12, 2, 33, '{"reason": "고단백 식품", "score": 0.94}', NOW()),
(13, 3, 28, '{"reason": "근력 운동 강화", "score": 0.90}', NOW()),
(14, 4, 40, '{"reason": "칼로리 소모 촉진", "score": 0.88}', NOW()),
(15, 5, 35, '{"reason": "체지방 감소 도움", "score": 0.87}', NOW()),
(16, 6, 45, '{"reason": "근육 회복 도움", "score": 0.92}', NOW()),
(17, 7, 38, '{"reason": "복부 강화 운동", "score": 0.85}', NOW()),
(18, 8, 42, '{"reason": "에너지 보충용", "score": 0.90}', NOW()),
(19, 9, 48, '{"reason": "지구력 강화", "score": 0.91}', NOW()),
(20, 10, 50, '{"reason": "운동 루틴 개선", "score": 0.89}', NOW()),
(21, 1, 7, '{"reason": "칼로리 적은 음식", "score": 0.93}', NOW()),
(22, 2, 14, '{"reason": "지방 연소 도움", "score": 0.88}', NOW()),
(23, 3, 19, '{"reason": "단백질 풍부", "score": 0.92}', NOW()),
(24, 4, 21, '{"reason": "근력 강화", "score": 0.85}', NOW()),
(25, 5, 24, '{"reason": "체력 증진", "score": 0.90}', NOW()),
(26, 6, 27, '{"reason": "에너지 공급", "score": 0.87}', NOW()),
(27, 7, 31, '{"reason": "지속 가능한 운동", "score": 0.89}', NOW()),
(28, 8, 34, '{"reason": "체중 관리 도움", "score": 0.91}', NOW()),
(29, 9, 36, '{"reason": "복부 지방 감소", "score": 0.86}', NOW()),
(30, 10, 39, '{"reason": "근육 회복 촉진", "score": 0.92}', NOW()),
(31, 1, 41, '{"reason": "체지방 감소", "score": 0.88}', NOW()),
(32, 2, 43, '{"reason": "에너지 보충", "score": 0.90}', NOW()),
(33, 3, 44, '{"reason": "유산소 운동 강화", "score": 0.87}', NOW()),
(34, 4, 46, '{"reason": "근력 운동에 적합", "score": 0.91}', NOW()),
(35, 5, 47, '{"reason": "운동 루틴 다양화", "score": 0.85}', NOW()),
(36, 6, 49, '{"reason": "체력 강화 도움", "score": 0.89}', NOW()),
(37, 7, 1, '{"reason": "고단백 식품", "score": 0.93}', NOW()),
(38, 8, 2, '{"reason": "지방 연소 촉진", "score": 0.88}', NOW()),
(39, 9, 4, '{"reason": "칼로리 소모 촉진", "score": 0.90}', NOW()),
(40, 10, 6, '{"reason": "복부 지방 감소 도움", "score": 0.87}', NOW()),
(41, 1, 9, '{"reason": "근육 강화", "score": 0.91}', NOW()),
(42, 2, 11, '{"reason": "에너지 공급", "score": 0.86}', NOW()),
(43, 3, 13, '{"reason": "체중 감량 도움", "score": 0.89}', NOW()),
(44, 4, 16, '{"reason": "운동 후 회복", "score": 0.92}', NOW()),
(45, 5, 18, '{"reason": "지구력 강화", "score": 0.85}', NOW()),
(46, 6, 23, '{"reason": "지속 운동 도움", "score": 0.90}', NOW()),
(47, 7, 26, '{"reason": "근력 강화 프로그램", "score": 0.87}', NOW()),
(48, 8, 29, '{"reason": "체지방 감소", "score": 0.91}', NOW()),
(49, 9, 32, '{"reason": "유산소 강화", "score": 0.88}', NOW()),
(50, 10, 37, '{"reason": "운동 루틴 다양화", "score": 0.90}', NOW());


INSERT INTO feedback (feedback_id, recommendation_id, user_id, feedback_type, feedback_data, created_at) VALUES
(1, 1, 1, 'like', '{"comment": "매우 도움이 되었어요."}', NOW()),
(2, 2, 2, 'dislike', '{"comment": "내 취향과 안 맞아요."}', NOW()),
(3, 3, 3, 'rating', '{"score": 4}', NOW()),
(4, 4, 4, 'comment', '{"comment": "추천 감사합니다!"}', NOW()),
(5, 5, 5, 'like', '{"comment": "운동 루틴에 딱 맞아요."}', NOW()),
(6, 6, 6, 'rating', '{"score": 5}', NOW()),
(7, 7, 7, 'dislike', '{"comment": "효과를 못 느꼈어요."}', NOW()),
(8, 8, 8, 'comment', '{"comment": "더 다양한 추천이 필요해요."}', NOW()),
(9, 9, 9, 'like', '{"comment": "좋은 정보 감사합니다."}', NOW()),
(10, 10, 10, 'rating', '{"score": 3}', NOW()),
(11, 11, 1, 'like', '{"comment": "계속 이용하고 싶어요."}', NOW()),
(12, 12, 2, 'dislike', '{"comment": "다른 걸 원해요."}', NOW()),
(13, 13, 3, 'comment', '{"comment": "정확한 추천이네요."}', NOW()),
(14, 14, 4, 'rating', '{"score": 4}', NOW()),
(15, 15, 5, 'like', '{"comment": "운동 동기부여가 됐어요."}', NOW()),
(16, 16, 6, 'comment', '{"comment": "조금 더 상세하면 좋겠어요."}', NOW()),
(17, 17, 7, 'dislike', '{"comment": "제게 맞지 않아요."}', NOW()),
(18, 18, 8, 'rating', '{"score": 5}', NOW()),
(19, 19, 9, 'like', '{"comment": "추천 고마워요."}', NOW()),
(20, 20, 10, 'comment', '{"comment": "운동 효과가 기대돼요."}', NOW()),
(21, 21, 1, 'like', '{"comment": "매우 만족합니다."}', NOW()),
(22, 22, 2, 'dislike', '{"comment": "별로였어요."}', NOW()),
(23, 23, 3, 'rating', '{"score": 4}', NOW()),
(24, 24, 4, 'comment', '{"comment": "도움이 되었어요."}', NOW()),
(25, 25, 5, 'like', '{"comment": "운동에 활용할게요."}', NOW()),
(26, 26, 6, 'comment', '{"comment": "좀 더 쉽게 설명해주세요."}', NOW()),
(27, 27, 7, 'dislike', '{"comment": "제 스타일과 다릅니다."}', NOW()),
(28, 28, 8, 'rating', '{"score": 5}', NOW()),
(29, 29, 9, 'like', '{"comment": "좋은 추천 감사합니다."}', NOW()),
(30, 30, 10, 'comment', '{"comment": "꾸준히 이용할게요."}', NOW()),
(31, 31, 1, 'like', '{"comment": "재미있네요."}', NOW()),
(32, 32, 2, 'dislike', '{"comment": "운동 난이도가 높아요."}', NOW()),
(33, 33, 3, 'rating', '{"score": 4}', NOW()),
(34, 34, 4, 'comment', '{"comment": "친절한 추천 감사합니다."}', NOW()),
(35, 35, 5, 'like', '{"comment": "더 자주 추천해주세요."}', NOW()),
(36, 36, 6, 'comment', '{"comment": "조금 아쉬워요."}', NOW()),
(37, 37, 7, 'dislike', '{"comment": "효과가 없어요."}', NOW()),
(38, 38, 8, 'rating', '{"score": 5}', NOW()),
(39, 39, 9, 'like', '{"comment": "도움이 많이 됐어요."}', NOW()),
(40, 40, 10, 'comment', '{"comment": "더 많은 추천을 바랍니다."}', NOW()),
(41, 41, 1, 'like', '{"comment": "좋아요!"}', NOW()),
(42, 42, 2, 'dislike', '{"comment": "취향이 아니에요."}', NOW()),
(43, 43, 3, 'rating', '{"score": 4}', NOW()),
(44, 44, 4, 'comment', '{"comment": "유용했습니다."}', NOW()),
(45, 45, 5, 'like', '{"comment": "계속 이용할게요."}', NOW()),
(46, 46, 6, 'comment', '{"comment": "좀 더 쉽게 접근하고 싶어요."}', NOW()),
(47, 47, 7, 'dislike', '{"comment": "다른 걸 원합니다."}', NOW()),
(48, 48, 8, 'rating', '{"score": 5}', NOW()),
(49, 49, 9, 'like', '{"comment": "추천 감사합니다."}', NOW()),
(50, 50, 10, 'comment', '{"comment": "더 좋은 운동 추천 기대합니다."}', NOW());


INSERT INTO policy (policy_id, policy_name, policy_data, created_at, updated_at) VALUES
(1, '개인정보 처리방침', '{"version": "1.0", "details": "사용자 개인정보 보호를 위한 정책입니다.", "effective_date": "2023-01-01"}', NOW(), NOW()),
(2, '이용 약관', '{"version": "2.1", "details": "서비스 이용 조건과 제한 사항을 명시합니다.", "effective_date": "2023-02-15"}', NOW(), NOW()),
(3, '환불 정책', '{"version": "1.3", "details": "결제 취소 및 환불 절차에 관한 안내입니다.", "effective_date": "2023-03-10"}', NOW(), NOW()),
(4, '쿠키 정책', '{"version": "1.0", "details": "쿠키 사용 및 관리 방침입니다.", "effective_date": "2023-01-20"}', NOW(), NOW()),
(5, '보안 정책', '{"version": "1.5", "details": "데이터 보안 및 접근 권한 관리에 관한 정책입니다.", "effective_date": "2023-04-01"}', NOW(), NOW()),
(6, '서비스 운영 정책', '{"version": "2.0", "details": "서비스 운영과 관련한 규칙을 포함합니다.", "effective_date": "2023-02-01"}', NOW(), NOW()),
(7, '광고 정책', '{"version": "1.2", "details": "광고 게재 및 관리 방침입니다.", "effective_date": "2023-03-05"}', NOW(), NOW()),
(8, '커뮤니티 가이드라인', '{"version": "1.0", "details": "커뮤니티 내 행동 지침을 안내합니다.", "effective_date": "2023-01-15"}', NOW(), NOW()),
(9, '콘텐츠 정책', '{"version": "1.1", "details": "콘텐츠 생성 및 게시 관련 정책입니다.", "effective_date": "2023-02-10"}', NOW(), NOW()),
(10, '데이터 보존 정책', '{"version": "1.0", "details": "데이터 보존 기간과 절차를 안내합니다.", "effective_date": "2023-04-05"}', NOW(), NOW()),
(11, '개인정보 처리방침', '{"version": "1.1", "details": "개인정보 보호 강화 내용 추가.", "effective_date": "2023-05-01"}', NOW(), NOW()),
(12, '이용 약관', '{"version": "2.2", "details": "신규 서비스 추가로 조항 변경.", "effective_date": "2023-06-01"}', NOW(), NOW()),
(13, '환불 정책', '{"version": "1.4", "details": "환불 대상 및 절차 보완.", "effective_date": "2023-05-20"}', NOW(), NOW()),
(14, '쿠키 정책', '{"version": "1.1", "details": "쿠키 사용 동의 절차 개선.", "effective_date": "2023-06-10"}', NOW(), NOW()),
(15, '보안 정책', '{"version": "1.6", "details": "보안 점검 및 업데이트 내역.", "effective_date": "2023-05-30"}', NOW(), NOW()),
(16, '서비스 운영 정책', '{"version": "2.1", "details": "운영 시간 및 지원 범위 안내.", "effective_date": "2023-06-05"}', NOW(), NOW()),
(17, '광고 정책', '{"version": "1.3", "details": "광고 승인 절차 강화.", "effective_date": "2023-06-15"}', NOW(), NOW()),
(18, '커뮤니티 가이드라인', '{"version": "1.1", "details": "사용자 행동 규칙 업데이트.", "effective_date": "2023-06-10"}', NOW(), NOW()),
(19, '콘텐츠 정책', '{"version": "1.2", "details": "저작권 보호 조항 강화.", "effective_date": "2023-06-20"}', NOW(), NOW()),
(20, '데이터 보존 정책', '{"version": "1.1", "details": "데이터 삭제 요청 절차 추가.", "effective_date": "2023-06-25"}', NOW(), NOW()),
(21, '개인정보 처리방침', '{"version": "1.2", "details": "개인정보 암호화 방법 업데이트.", "effective_date": "2023-07-01"}', NOW(), NOW()),
(22, '이용 약관', '{"version": "2.3", "details": "서비스 변경 및 책임 범위 수정.", "effective_date": "2023-07-05"}', NOW(), NOW()),
(23, '환불 정책', '{"version": "1.5", "details": "환불 기간 연장 안내.", "effective_date": "2023-07-10"}', NOW(), NOW()),
(24, '쿠키 정책', '{"version": "1.2", "details": "쿠키 사용 목적 명확화.", "effective_date": "2023-07-12"}', NOW(), NOW()),
(25, '보안 정책', '{"version": "1.7", "details": "보안 인증 절차 강화.", "effective_date": "2023-07-15"}', NOW(), NOW()),
(26, '서비스 운영 정책', '{"version": "2.2", "details": "긴급 대응 절차 추가.", "effective_date": "2023-07-18"}', NOW(), NOW()),
(27, '광고 정책', '{"version": "1.4", "details": "광고 노출 기준 변경.", "effective_date": "2023-07-20"}', NOW(), NOW()),
(28, '커뮤니티 가이드라인', '{"version": "1.2", "details": "허용 콘텐츠 범위 조정.", "effective_date": "2023-07-22"}', NOW(), NOW()),
(29, '콘텐츠 정책', '{"version": "1.3", "details": "유해 콘텐츠 필터링 강화.", "effective_date": "2023-07-25"}', NOW(), NOW()),
(30, '데이터 보존 정책', '{"version": "1.2", "details": "데이터 보존 기간 연장.", "effective_date": "2023-07-27"}', NOW(), NOW()),
(31, '개인정보 처리방침', '{"version": "1.3", "details": "사용자 권리 강화.", "effective_date": "2023-08-01"}', NOW(), NOW()),
(32, '이용 약관', '{"version": "2.4", "details": "책임 제한 조항 수정.", "effective_date": "2023-08-03"}', NOW(), NOW()),
(33, '환불 정책', '{"version": "1.6", "details": "환불 조건 변경.", "effective_date": "2023-08-05"}', NOW(), NOW()),
(34, '쿠키 정책', '{"version": "1.3", "details": "쿠키 설정 옵션 확대.", "effective_date": "2023-08-07"}', NOW(), NOW()),
(35, '보안 정책', '{"version": "1.8", "details": "네트워크 보안 강화.", "effective_date": "2023-08-09"}', NOW(), NOW()),
(36, '서비스 운영 정책', '{"version": "2.3", "details": "운영 시간 조정.", "effective_date": "2023-08-11"}', NOW(), NOW()),
(37, '광고 정책', '{"version": "1.5", "details": "광고 수익 배분 안내.", "effective_date": "2023-08-13"}', NOW(), NOW()),
(38, '커뮤니티 가이드라인', '{"version": "1.3", "details": "사용자 신고 처리 절차.", "effective_date": "2023-08-15"}', NOW(), NOW()),
(39, '콘텐츠 정책', '{"version": "1.4", "details": "콘텐츠 승인 절차 수정.", "effective_date": "2023-08-17"}', NOW(), NOW()),
(40, '데이터 보존 정책', '{"version": "1.3", "details": "데이터 보안 강화 조치.", "effective_date": "2023-08-19"}', NOW(), NOW()),
(41, '개인정보 처리방침', '{"version": "1.4", "details": "개인정보 처리 방침 최신화.", "effective_date": "2023-08-21"}', NOW(), NOW()),
(42, '이용 약관', '{"version": "2.5", "details": "서비스 조건 업데이트.", "effective_date": "2023-08-23"}', NOW(), NOW()),
(43, '환불 정책', '{"version": "1.7", "details": "환불 신청 방법 변경.", "effective_date": "2023-08-25"}', NOW(), NOW()),
(44, '쿠키 정책', '{"version": "1.4", "details": "쿠키 정책 알림 개선.", "effective_date": "2023-08-27"}', NOW(), NOW()),
(45, '보안 정책', '{"version": "1.9", "details": "암호 정책 강화.", "effective_date": "2023-08-29"}', NOW(), NOW()),
(46, '서비스 운영 정책', '{"version": "2.4", "details": "고객 지원 정책 개선.", "effective_date": "2023-08-31"}', NOW(), NOW()),
(47, '광고 정책', '{"version": "1.6", "details": "광고 정책 상세화.", "effective_date": "2023-09-02"}', NOW(), NOW()),
(48, '커뮤니티 가이드라인', '{"version": "1.4", "details": "커뮤니티 규칙 강화.", "effective_date": "2023-09-04"}', NOW(), NOW()),
(49, '콘텐츠 정책', '{"version": "1.5", "details": "콘텐츠 정책 보완.", "effective_date": "2023-09-06"}', NOW(), NOW()),
(50, '데이터 보존 정책', '{"version": "1.4", "details": "데이터 관리 정책 최신화.", "effective_date": "2023-09-08"}', NOW(), NOW());


INSERT INTO log (log_id, event_type, event_data, created_at) VALUES
(1, 'user_login', '{"user_id": 101, "ip": "192.168.1.1", "success": true}', NOW()),
(2, 'user_logout', '{"user_id": 101}', NOW()),
(3, 'exercise_started', '{"user_id": 102, "exercise_session_id": 201}', NOW()),
(4, 'exercise_completed', '{"user_id": 102, "exercise_session_id": 201, "duration_minutes": 30}', NOW()),
(5, 'meal_logged', '{"user_id": 103, "food_item_id": 301, "quantity": 2}', NOW()),
(6, 'achievement_unlocked', '{"user_id": 104, "achievement_id": 401}', NOW()),
(7, 'recommendation_viewed', '{"user_id": 105, "recommendation_id": 501}', NOW()),
(8, 'feedback_submitted', '{"user_id": 106, "feedback_id": 601, "rating": 5}', NOW()),
(9, 'password_changed', '{"user_id": 107}', NOW()),
(10, 'profile_updated', '{"user_id": 108, "fields_changed": ["email", "nickname"]}', NOW()),
(11, 'session_timeout', '{"user_id": 109, "session_id": 701}', NOW()),
(12, 'new_user_registered', '{"user_id": 110, "email": "user110@example.com"}', NOW()),
(13, 'password_reset_requested', '{"user_id": 111}', NOW()),
(14, 'email_verified', '{"user_id": 112}', NOW()),
(15, 'subscription_renewed', '{"user_id": 113, "plan": "premium"}', NOW()),
(16, 'notification_sent', '{"user_id": 114, "notification_type": "reminder"}', NOW()),
(17, 'data_exported', '{"user_id": 115, "export_type": "csv"}', NOW()),
(18, 'app_crash', '{"error_code": "500", "message": "Null pointer exception"}', NOW()),
(19, 'device_connected', '{"user_id": 116, "device_id": "device_123"}', NOW()),
(20, 'device_disconnected', '{"user_id": 116, "device_id": "device_123"}', NOW()),
(21, 'workout_plan_created', '{"user_id": 117, "plan_id": 801}', NOW()),
(22, 'workout_plan_updated', '{"user_id": 117, "plan_id": 801}', NOW()),
(23, 'friend_request_sent', '{"user_id": 118, "friend_user_id": 119}', NOW()),
(24, 'friend_request_accepted', '{"user_id": 119, "friend_user_id": 118}', NOW()),
(25, 'comment_posted', '{"user_id": 120, "comment_id": 901}', NOW()),
(26, 'comment_deleted', '{"user_id": 120, "comment_id": 901}', NOW()),
(27, 'post_liked', '{"user_id": 121, "post_id": 1001}', NOW()),
(28, 'post_shared', '{"user_id": 121, "post_id": 1001}', NOW()),
(29, 'badge_earned', '{"user_id": 122, "badge_id": 1101}', NOW()),
(30, 'password_failed', '{"user_id": 123, "attempts": 3}', NOW()),
(31, 'email_changed', '{"user_id": 124, "old_email": "old@example.com", "new_email": "new@example.com"}', NOW()),
(32, 'subscription_canceled', '{"user_id": 125, "plan": "basic"}', NOW()),
(33, 'app_update_installed', '{"version": "1.2.3"}', NOW()),
(34, 'settings_changed', '{"user_id": 126, "settings": {"theme": "dark"}}', NOW()),
(35, 'password_reset_completed', '{"user_id": 127}', NOW()),
(36, 'account_locked', '{"user_id": 128, "reason": "too many failed attempts"}', NOW()),
(37, 'account_unlocked', '{"user_id": 128}', NOW()),
(38, 'email_bounced', '{"user_id": 129, "email": "bounce@example.com"}', NOW()),
(39, 'newsletter_subscribed', '{"user_id": 130}', NOW()),
(40, 'newsletter_unsubscribed', '{"user_id": 130}', NOW()),
(41, 'profile_picture_updated', '{"user_id": 131}', NOW()),
(42, 'payment_failed', '{"user_id": 132, "amount": 49.99}', NOW()),
(43, 'payment_successful', '{"user_id": 132, "amount": 49.99}', NOW()),
(44, 'two_factor_enabled', '{"user_id": 133}', NOW()),
(45, 'two_factor_disabled', '{"user_id": 133}', NOW()),
(46, 'device_registered', '{"user_id": 134, "device_id": "device_999"}', NOW()),
(47, 'device_unregistered', '{"user_id": 134, "device_id": "device_999"}', NOW()),
(48, 'password_expired', '{"user_id": 135}', NOW()),
(49, 'session_revoked', '{"user_id": 136, "session_id": 10001}', NOW()),
(50, 'api_key_created', '{"user_id": 137, "api_key_id": 2001}', NOW());








